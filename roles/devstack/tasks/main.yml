---
- set_fact:
    role: "{{ role|default('all-in-one') }}"

- name: Include site-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../../../secrets.yml"
    - "../vars/secrets_dummy.yml"
  no_log: yes

- include: password-var.yml

- name: get username
  command: whoami
  register: username
  changed_when: no
  check_mode: no

- name: Install git
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - git
  become: yes

- name: git clone devstack
  git:
    repo: http://git.openstack.org/openstack-dev/devstack.git
    dest: "{{ devstack_dir }}"
    version: "{{ branch }}"
    force: no
    update: no

- name: create /opt/stack
  file:
    path: /opt/stack
    state: directory
    owner: "{{ username.stdout }}"
  become: yes

- name: check /opt/stack/nova exists
  stat:
    path: /opt/stack/nova
  register: st
- name: get gitrepo tarball
  get_url:
    url: "{{ gitrepo_tarball_url }}"
    dest: /tmp/gitrepo.tar.bz2
  register: tarball_updated
  when: gitrepo_tarball_url is defined and not st.stat.exists
- name: extract gitrepo tarball
  command: tar xf /tmp/gitrepo.tar.bz2 -C /opt/stack
  when: tarball_updated|changed and not st.stat.exists

- name: Ensure {{ home }}/.bash_completion.d
  file:
    dest: "{{ bash_completion_dir }}"
    mode: 0755
    state: directory

- name: Prepare OpenStack CLI bash completions
  get_url:
    url: "https://raw.githubusercontent.com/openstack/python-{{ item.module }}client/{{ item.branch }}/tools/{{ item.module }}.bash_completion"
    dest: "{{ bash_completion_dir }}/{{ item.module }}"
    force: yes
  with_items:
    - module: nova
      branch: master
    - module: cinder
      branch: master
    - module: neutron
      branch: master
    - module: keystone
      branch: stable/mitaka
    - module: glance
      branch: master

- name: Create bin directory
  file:
    path: "{{ home }}/bin"
    mode: 0755
    state: directory

- name: Copy useful scripts
  copy:
    src: "bin/{{ item }}"
    dest: "{{ home }}/bin/{{ item }}"
    mode: 0755
    backup: yes
  with_items:
    - git-clone-openstack-repo.sh
    - horizon-reload.sh

- name: git clone devstack-tools
  git:
    repo: https://github.com/amotoki/devstack-tools.git
    dest: "{{ devstack_tools_dir }}"
    force: no

- name: controller must be specified for compute node
  fail:
    msg: "controller must be specified for compute node"
  when: role == "compute" and controller is not defined

- name: Deploy local.conf (controller)
  template:
    src: "{{ branch|basename }}/local.conf"
    dest: "{{ devstack_dir }}/local.conf"
  when: role == "all-in-one"

- name: Deploy local.conf (compute)
  template:
    src: local.conf.compute
    dest: "{{ devstack_dir }}/local.conf"
  when: role == "compute"

- name: Deploy local.sh for controler
  command: cp {{ item.src }} {{ item.dest }} creates={{ item.dest }}
  with_items:
    - src: "{{ devstack_tools_dir }}/config/local.sh"
      dest: "{{ devstack_dir }}/local.sh"
  when: role == "all-in-one"

# - name: Install optional packages for OpenStack development
#   apt:
#     pkg: "{{ item }}"
#     state: installed
#   with_items:
#     - libmysqlclient-dev
#     - libxml2-dev
#     - libxslt1-dev
#     - python-dev
#     - libssl-dev
#     - libffi-dev
#   become: yes

- name: Install optional packages for OpenStack development (python3)
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - python3-dev
  become: yes
